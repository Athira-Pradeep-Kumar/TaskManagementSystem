﻿@model IEnumerable<TaskManagementSystem.ViewModel.TaskViewModel>
@{
    ViewBag.Title = "TaskList";
}

<h2><center>Task Dashboard</center></h2>
<hr />

<div class="d-flex justify-content-between align-items-center">
    <h4 class="mb-0">Welcome @User.Identity.Name</h4>
    <div>
        @Html.ActionLink("Create Task", "CreateTask", null, new { @class = "btn btn-danger" })
    </div>
    <div>
        <h4>Status:  </h4>
            @Html.DropDownList("status", new SelectList(new[] { "All", "New", "Completed", "In Progress","Cancelled" }), "All", new { @class = "dropdown" })
            <input type="submit" value="Search" class="btn btn-primary" />        
    </div>
</div>
<br/>
<div style="min-height:300px; height:auto;">
    <table class="table table-hover">
        <thead style="font-weight:bold;">
            <tr>
                <td>Task Id</td>
                <td>Title</td>
                <td>Description</td>
                <td>Date</td>
                <td>Status</td>
                <td>Action</td>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Count() != 0)
            {
                foreach (var task in Model)
                {
                    <tr>
                        <td>@task.TaskId</td>
                        <td>@task.Title</td>
                        <td>@task.Description</td>
                        <td>@task.Date</td>
                        <td>
                            @{
                                string value = string.Empty;
                                switch (task.Status)
                                {
                                    case 1:
                                        value = "New";
                                        break;
                                    case 2:
                                        value = "InProgress";
                                        break;
                                    case 3:
                                        value = "Completed";
                                        break;
                                    case 4:
                                        value = "Cancelled";
                                        break;

                                }
                            } @value
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { task.TaskId })
                            @Html.ActionLink("Delete", "Delete", new { taskId = task.TaskId }, new { @class = "btn btn-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this task?');" })
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="6">
                        No Records Available...
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<style>
    .btn btn-danger {
        text-align: right;
    }
    .dropdown {
        width: 150px;
        height: 30px;
    }
</style>